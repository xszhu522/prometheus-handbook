import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as l,c as p,a,b as e,d as t,w as d,e as o}from"./app-aeozbcr_.js";const i={},h=a("h1",{id:"数据模型",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#数据模型","aria-hidden":"true"},"#"),e(" 数据模型")],-1),u={href:"https://www.wikiwand.com/zh/%E6%99%82%E9%96%93%E5%BA%8F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},_=o('<h2 id="指标名称和标签" tabindex="-1"><a class="header-anchor" href="#指标名称和标签" aria-hidden="true">#</a> 指标名称和标签</h2><p>每一条时间序列由指标名称（Metrics Name）以及一组标签（键值对）唯一标识。其中指标的名称（metric name）可以反映被监控样本的含义（例如，<code>http_requests_total</code> — 表示当前系统接收到的 HTTP 请求总量），指标名称只能由 ASCII 字符、数字、下划线以及冒号组成，同时必须匹配正则表达式 <code>[a-zA-Z_:][a-zA-Z0-9_:]*</code>。</p><blockquote><p><strong>[info] 注意</strong></p><p>冒号用来表示用户自定义的记录规则，不能在 exporter 中或监控对象直接暴露的指标中使用冒号来定义指标名称。</p></blockquote><p>通过使用标签，Prometheus 开启了强大的多维数据模型：对于相同的指标名称，通过不同标签列表的集合，会形成特定的度量维度实例（例如：所有包含度量名称为 <code>/api/tracks</code> 的 http 请求，打上 <code>method=POST</code> 的标签，就会形成具体的 http 请求）。该查询语言在这些指标和标签列表的基础上进行过滤和聚合。改变任何度量指标上的任何标签值（包括添加或删除指标），都会创建新的时间序列。</p><p>标签的名称只能由 ASCII 字符、数字以及下划线组成并满足正则表达式 <code>[a-zA-Z_][a-zA-Z0-9_]*</code>。其中以 <code>__</code> 作为前缀的标签，是系统保留的关键字，只能在系统内部使用。标签的值则可以包含任何 <code>Unicode</code> 编码的字符。</p>',5),m=o(`<h2 id="样本" tabindex="-1"><a class="header-anchor" href="#样本" aria-hidden="true">#</a> 样本</h2><p>在时间序列中的每一个点称为一个样本（sample），样本由以下三部分组成：</p><ul><li>指标（metric）：指标名称和描述当前样本特征的 labelsets；</li><li>时间戳（timestamp）：一个精确到毫秒的时间戳；</li><li>样本值（value）： 一个 folat64 的浮点型数据表示当前样本的值。</li></ul><h2 id="表示方式" tabindex="-1"><a class="header-anchor" href="#表示方式" aria-hidden="true">#</a> 表示方式</h2><p>通过如下表达方式表示指定指标名称和指定标签集合的时间序列：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>metric name<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>label name<span class="token operator">&gt;=</span><span class="token operator">&lt;</span>label value<span class="token operator">&gt;</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，指标名称为 <code>api_http_requests_total</code>，标签为 <code>method=&quot;POST&quot;</code> 和 <code>handler=&quot;/messages&quot;</code> 的时间序列可以表示为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>api_http_requests_total<span class="token punctuation">{</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span>, <span class="token assign-left variable">handler</span><span class="token operator">=</span><span class="token string">&quot;/messages&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),k={href:"http://opentsdb.net/",target:"_blank",rel:"noopener noreferrer"};function b(g,f){const s=n("ExternalLinkIcon"),r=n("RouterLink");return l(),p("div",null,[h,a("p",null,[e("Prometheus 所有采集的监控数据均以指标（metric）的形式保存在内置的"),a("a",u,[e("时间序列"),t(s)]),e("数据库当中（TSDB）：属于同一指标名称，同一标签集合的、有时间戳标记的数据流。除了存储的时间序列，Prometheus 还可以根据查询请求产生临时的、衍生的时间序列作为返回结果。")]),_,a("p",null,[e("更多详细内容请参考 "),t(r,{to:"/practices/naming.html"},{default:d(()=>[e("指标和标签命名最佳实践")]),_:1}),e("。")]),m,a("p",null,[e("这与 "),a("a",k,[e("OpenTSDB"),t(s)]),e(" 中使用的标记法相同。")])])}const q=c(i,[["render",b],["__file","data_model.html.vue"]]);export{q as default};
