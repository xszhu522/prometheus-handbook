import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as h,o as l,c as i,a as e,b as t,d as r,w as s}from"./app-aeozbcr_.js";const u={},d=e("h1",{id:"prometheus-简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-简介","aria-hidden":"true"},"#"),t(" Prometheus 简介")],-1),_=e("h2",{id:"什么是-prometheus",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是-prometheus","aria-hidden":"true"},"#"),t(" 什么是 Prometheus？")],-1),c={href:"https://github.com/prometheus",target:"_blank",rel:"noopener noreferrer"},m={href:"http://soundcloud.com/",target:"_blank",rel:"noopener noreferrer"},p={href:"https://cncf.io/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"},g=e("h3",{id:"prometheus-的优势",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-的优势","aria-hidden":"true"},"#"),t(" Prometheus 的优势")],-1),P=e("p",null,"Prometheus 的主要优势有：",-1),b=e("li",null,"不依赖分布式存储；单个服务节点具有自治能力。",-1),x=e("li",null,"时间序列数据是服务端通过 HTTP 协议主动拉取获得的。",-1),k=e("li",null,"可以通过静态配置文件或服务发现来获取监控目标。",-1),v=e("li",null,"支持多种类型的图表和仪表盘。",-1),C=e("h3",{id:"prometheus-的组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-的组件","aria-hidden":"true"},"#"),t(" Prometheus 的组件")],-1),w=e("p",null,"Prometheus 生态系统由多个组件组成，其中有许多组件是可选的：",-1),y={href:"https://github.com/prometheus/prometheus",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/prometheus/pushgateway",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/prometheus/alertmanager",target:"_blank",rel:"noopener noreferrer"},S=e("li",null,"其他各种周边工具。",-1),E={href:"https://golang.org/",target:"_blank",rel:"noopener noreferrer"},G=e("h3",{id:"prometheus-的架构",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-的架构","aria-hidden":"true"},"#"),t(" Prometheus 的架构")],-1),B=e("p",null,"Prometheus 的整体架构以及生态系统组件如下图所示：",-1),T=e("figure",null,[e("img",{src:"https://hugo-picture.oss-cn-beijing.aliyuncs.com/images/9Qt5yi.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),V={href:"https://grafana.com/",target:"_blank",rel:"noopener noreferrer"},j=e("h2",{id:"prometheus-适用于什么场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-适用于什么场景","aria-hidden":"true"},"#"),t(" Prometheus 适用于什么场景")],-1),F=e("p",null,"Prometheus 适用于记录文本格式的时间序列，它既适用于以机器为中心的监控，也适用于高度动态的面向服务架构的监控。在微服务的世界中，它对多维数据收集和查询的支持有特殊优势。Prometheus 是专为提高系统可靠性而设计的，它可以在断电期间快速诊断问题，每个 Prometheus Server 都是相互独立的，不依赖于网络存储或其他远程服务。当基础架构出现故障时，你可以通过 Prometheus 快速定位故障点，而且不会消耗大量的基础架构资源。",-1),H=e("h2",{id:"prometheus-不适合什么场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prometheus-不适合什么场景","aria-hidden":"true"},"#"),t(" Prometheus 不适合什么场景")],-1),I=e("p",null,"Prometheus 非常重视可靠性，即使在出现故障的情况下，你也可以随时查看有关系统的可用统计信息。如果你需要百分之百的准确度，例如按请求数量计费，那么 Prometheus 不太适合你，因为它收集的数据可能不够详细完整。这种情况下，你最好使用其他系统来收集和分析数据以进行计费，并使用 Prometheus 来监控系统的其余部分。",-1);function Q(R,z){const o=h("ExternalLinkIcon"),n=h("RouterLink");return l(),i("div",null,[d,_,e("p",null,[e("a",c,[t("Prometheus"),r(o)]),t(" 是由前 Google 工程师从 2012 年开始在 "),e("a",m,[t("Soundcloud"),r(o)]),t(" 以开源软件的形式进行研发的系统监控和告警工具包，自此以后，许多公司和组织都采用了 Prometheus 作为监控告警工具。Prometheus 的开发者和用户社区非常活跃，它现在是一个独立的开源项目，可以独立于任何公司进行维护。为了证明这一点，Prometheus 于 2016 年 5 月加入 "),e("a",p,[t("CNCF"),r(o)]),t(" 基金会，成为继 "),e("a",f,[t("Kubernetes"),r(o)]),t(" 之后的第二个 CNCF 托管项目。")]),e("p",null,[t("有关 Prometheus 的详细信息，请参考"),r(n,{to:"/1-introduction/media.html"},{default:s(()=>[t("后续章节")]),_:1})]),g,P,e("ul",null,[e("li",null,[t("由指标名称和和键/值对标签标识的时间序列数据组成的多维"),r(n,{to:"/2-concepts/data_model.html"},{default:s(()=>[t("数据模型")]),_:1}),t("。")]),e("li",null,[t("强大的"),r(n,{to:"/4-prometheus/basics.html"},{default:s(()=>[t("查询语言 PromQL")]),_:1}),t("。")]),b,x,e("li",null,[t("也可以通过中间网关来"),r(n,{to:"/5-instrumenting/pushing.html"},{default:s(()=>[t("推送时间序列数据")]),_:1}),t("。")]),k,v]),C,w,e("ul",null,[e("li",null,[e("a",y,[t("Prometheus Server"),r(o)]),t(" 作为服务端，用来存储时间序列数据。")]),e("li",null,[r(n,{to:"/5-instrumenting/clientlibs.html"},{default:s(()=>[t("客户端库")]),_:1}),t("用来检测应用程序代码。")]),e("li",null,[t("用于支持临时任务的"),e("a",L,[t("推送网关"),r(o)]),t("。")]),e("li",null,[r(n,{to:"/5-instrumenting/exporters.html"},{default:s(()=>[t("Exporter")]),_:1}),t(" 用来监控 HAProxy，StatsD，Graphite 等特殊的监控目标，并向 Prometheus 提供标准格式的监控样本数据。")]),e("li",null,[e("a",N,[t("alertmanager"),r(o)]),t(" 用来处理告警。")]),S]),e("p",null,[t("其中大多数组件都是用 "),e("a",E,[t("Go"),r(o)]),t(" 编写的，因此很容易构建和部署为静态二进制文件。")]),G,B,T,e("p",null,[t("Prometheus Server 直接从监控目标中或者间接通过推送网关来拉取监控指标，它在本地存储所有抓取到的样本数据，并对此数据执行一系列规则，以汇总和记录现有数据的新时间序列或生成告警。可以通过 "),e("a",V,[t("Grafana"),r(o)]),t(" 或者其他工具来实现监控数据的可视化。")]),j,F,H,I])}const K=a(u,[["render",Q],["__file","overview.html.vue"]]);export{K as default};
